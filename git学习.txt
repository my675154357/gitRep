一、安装
根据提示安装完成后，使用：
$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"
在本机配置好，每次提交将会提交这些信息，会公开
另外，使代码可读：git config --global color.ui auto

二、配置本地仓
在本地新建一个文件夹，使用git init 命令将文件夹变为git的工作区，之后git将会提交这里的文件。
查看仓库状态：git status（插曲：在执行git status这个命令时，中文名的文件显示为数字，解决方法：在git安装目录下打开git-bash.exe，执行git config –-global core.quotepath false即可解决）

三、提交
git add filename(文件名) .将文件从工作区提交到暂存区。
git commit -m "注释内容" .将文件从暂存区所有的文件全部提交到本地仓（所以不用加文件名），第一次提交必须加注释，否则无法提交。如果提交的注释过多，可以不加-m，直接回车，将会进入到vim编辑器界面，进行添加注释即可。如果在写注释的中途突然不想提交了，直接:q！退出，即可终止提交。
git commit -am "注释内容"  。可以将git add和git commit连写提交。最好别连写。
git push将文件从本地仓提交到远程仓。

四、查看日志
git log [filename]      。查看提交日志，如果在后面加上文件名或目录名，就会显示相应文件或目录的日志。如果日志太长，按空格显示下一页。 --pretty=short日志就不会显示提交的日期。
git log -p [filename]   。显示日志提交前后，文件内容的改动。

五、版本差异
git diff 。显示工作区与暂存区的区别。
git diff HEAD   。显示工作区与本地仓的区别。 -表示删掉的行内容，+表示新增的行内容，但只能显示文本文件的行内容差异，二进制文件则不行、

六、删除和版本回退
git reset --hard 版本号   。回到相应的版本号
git reset --hrad HEAD^    。回到前一个版本号，几个^就表示前几个，也可以git reset --hard HEAD~n ，n是几就是前几个版本。

tip：值得注意的地方，把我坑到了，把笔记记录在工作区内，结果测试版本回退发现找不到最新的版本了，为了这个来回看了三遍视频重新记笔记。终于摸清了这个版本回退的规则。
假如有个新增的文件a.txt，初始导入假设版本号为1（因为git是分布式管理，真实的版本号用的是哈希码，这里为了叙述和理解方便，假设版本号是1 2 3 ...）。做了一次修改后提交，版本号为2，然后继续修改提交了n次后，假设此时已经有6个版本了。使用git log 查看所有的版本是6（HEAD） 5 4 3 2 1。此时使用git reset --hard 4 回退到第四个版本，那么再用git log 命令查看所有版本则显示4（HEAD） 3 2 1，如果再回退到第2个版本，日志显示的版本号就是2（HEAD） 1。也就是想要再回到最之前的版本6，这里是看不到版本号了，切记。 

git checkout -- filename   。修改文件后，还在工作区还未add到暂存区，想恢复到初始状态，用这个命令。如果误删了工作区的文件，也可以用这个命令将文件从暂存区恢复到工作区。
git reset HEAD filename    。修改文件后，已经add到了暂存区，还未commit到本地仓，想恢复到初始状态，用这个命令。

git commit -am "delete file filename"    。如果真想删除，则用这个命令。